name: Test and Deploy

on: [ push, pull_request ]

env:
  SECRET_KEY: "FAKE_SECRET_KEY"
  DATABASE_URL: ${{secrets.DATABASE_URL}}

jobs:
  test:
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.2
          cache: 'pip'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      - name: Collect Static
        run: |
          python manage.py collectstatic --no-input
      - name: Run Tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          coverage run --source='.' manage.py test --no-input
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
  # deploy-caprover:
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - uses: a7ul/tar-action@v1.1.0
  #       with:
  #         command: c
  #         cwd: "./"
  #         files: |
  #           .
  #         outPath: deploy.tar
  #     - name: Deploy web app
  #       uses: caprover/deploy-from-github@v1.0.1
  #       with:
  #         server: '${{ secrets.CAPROVER_SERVER }}'
  #         app: '${{ secrets.CAPROVER_WEB_APP_NAME }}'
  #         token: '${{ secrets.CAPROVER_WEB_APP_TOKEN }}'
